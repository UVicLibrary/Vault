class Hyku::TenantAuthorityGenerator < Rails::Generators::Base
    	source_root File.expand_path('../templates', __FILE__)
    	argument :tenant, :type => :string, :default => "tenant"
    	argument :field, :type => :string, :default => "field"
    	class_option :type, :type => :string, :default => "select"
    	class_option :multiple, :type => :boolean, :default => true
    	
    	def create_yaml
    		create_file "config/authorities/#{authority.underscore}.yml", "# Add terms here\nterms:\n"
    	end
    	
    	def create_service
    		if options[:type] == "autocomplete"
    			create_file "app/services/#{authority.underscore}_service.rb", <<-FILE
module #{authority}Service
  mattr_accessor :authority
  self.authority = Qa::Authorities::Local.subauthority_for('#{authority.underscore}')

  def self.select_all_options
    authority.all.map do |element|
      [element[:label], element[:id]]
    end
  end

  def self.label(id)
    authority.find(id).fetch('term')
  end
end
    		FILE
    	  else
    			create_file "app/services/#{authority.underscore}_service.rb", <<-FILE
class #{authority}Service < Hyrax::QaSelectService
	def initialize(_authority_name = nil)
		super('#{authority.underscore}')
	end
end
    		FILE
    	  end
    	end
    	
    	def create_record_edit
    		file_path = "app/views/records/edit_fields/_#{field}.html.erb"
				if File.file?(file_path)
					gsub_file file_path,/(<%#Generated by the Tenant Authority Generator %>\n<% if)/ do |match|
						match.to_s+
							" request.base_url.include? '#{tenant}' %>"+
							"\n	<%= render 'records/edit_fields/#{tenant}/#{field}', f: f, key: key %>"+
							"\n<% elsif"
					end
				else
					template "_default.html.erb", file_path
    			gsub_file file_path,/(<%#Generated by the Tenant Authority Generator %>\n<% if)/ do |match|
    				match.to_s+
    					" request.base_url.include? '#{tenant}' %>"+
    					"\n	<%= render 'records/edit_fields/#{tenant}/#{field}', f: f, key: key %>"+
    					"\n<% else %>"+
    					"\n	<% if"
    			end
    		end
    	end
    	
    	def create_tenant_record_edit
    	  dir = "app/views/records/edit_fields/#{tenant}"
    	  #directory "../../#{dir}"
    		if options[:type] == "autocomplete"
    			template "_autocomplete.html.erb", "#{dir}/_#{field}.html.erb"
    		else
    			template "_select.html.erb", "#{dir}/_#{field}.html.erb"
    		end
    	end
    	
    	private
    	
    	def authority
    		"#{tenant.capitalize}#{field.capitalize}"
    	end
end

