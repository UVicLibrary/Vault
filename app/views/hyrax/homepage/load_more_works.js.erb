// The div.card-container to append new cards to
var cardDivId = '<%= append_to %>';
var cardDiv = $('#' + cardDivId);

// 1. Render and append cards to card wrapper element
// TO DO: Make this an array of JS(ON) objects instead of Ruby presenters
<% case presenters.first %>
  <% when VaultWorkShowPresenter %>
    <% presenters.each do |pres| %>
      var card = $("<%= j (render partial: "work_card",
                    locals: {
                      presenter: pres,
                      card_width: 3,
                      }) %>").hide().fadeIn(300);
      $(cardDiv).append(card);
    <% end %>
<% end %>

// See app/assets/browse_collections.js
window.dispatchEvent(new CustomEvent('workCardsLoaded', {}));

// Update the start parameter on the button
var loadMoreButton = cardDiv.parent().find('.load-more-button a');
updateButton(loadMoreButton);

function updateButton(button) {
  let start = parseInt(button.data('start')) + 8
  button.attr('data-start', start)
  // Update the URL parameter
  let oldUrl = button.attr('href')
  let newUrl = oldUrl.replace(/&start=\d+/, ("&start=" + start))
  button.attr('href', newUrl)
  // Remove loading text
  button.parent().siblings('.loading-wrapper').first().remove();
  if (start < parseInt(button.data('total'))) {
    button.parent().removeClass('hide-load-more'); //show button
    button.click(function () { showLoadingText(); })
  } else { button.parent().remove() }
}

