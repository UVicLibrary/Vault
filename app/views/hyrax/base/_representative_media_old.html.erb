<% if presenter.representative_id.present? %>
  <% if presenter.representative_presenter.image? %>
    <%= UniversalViewer.script_tag %>
    <div class="viewer-wrapper"><div class="uv viewer" data-uri="<%= main_app.polymorphic_url [main_app, :manifest, presenter] %>"></div></div>
  <% else %>
    <%= media_display presenter.representative_presenter %>
  <% end %>
<% else %>
  <%= image_tag 'default.png', class: "canonical-image" %>
<% end %>

<script>

    if (window.location.toString().includes('vault')) {

        document.addEventListener('thumbsLoaded', function(e) { // See public/uv/lib/iiif-gallery-component.js

            // Delete everything currently in the metadata panel and replace it with our template
            $('.iiif-metadata-component').empty();
            var template = '<div class="groups"><div class="group"><div class="header">About this image</div><div class="items"></div></div></div>';
            $('.iiif-metadata-component').append(template);
            generateMetadata();
            // Refresh the metadata panel if user clicks the thumbnail gallery, arrows, or does an image search
            $('.thumbsView').add('.prevOptions').add('.nextOptions').add('.go').on('click', function() {
                generateMetadata();
            });
            // Or prese enter in the image search bar
            $('.autoCompleteText').keypress(function(event) {
                if (event.keyCode === 13) {
                    generateMetadata();
                }
            });


            // Generate html for file set metadata by making a request to the manifest URL at generic-work/[id]/manifest.json
            function generateMetadata() {
                var manifestUrl = window.location.hash.split('&')[0].replace('#?manifest=', '') + '.json';
                $.get(manifestUrl, "", success, "json");

                function success(data) { //if successful ajax request
                    //$('.iiif-metadata-component').empty();
                    var selected = $('.thumbs').find('.selected'); // the current thumbnail
                    var index = parseInt(selected.attr('id').replace('thumb',''));
                    // Grab title, description, and other metadata from the manifest
                    var title = data.sequences[0].canvases[index].images[0].resource.label;
                    var description = data.sequences[0].canvases[index].images[0].resource.description;
                    var metadata = data.sequences[0].canvases[index].images[0].resource.metadata;

                    // Append the metadata for the first item/file set
                    var items = $('<div class="items"></div>');
                    items.append(generateItem('Title', title));
                    items.append(generateItem('Description', description));
                    for (var i = 0; i < metadata.length; i++) {
                        var obj = metadata[i];
                        for(var key in obj) {
                            items.append(generateItem(key.toString(), obj[key]));
                        }
                    }
                    $('.iiif-metadata-component .items').replaceWith(items);
                }// function success


                // Dynamically generates a label/value pair for a metadata field (e.g. creator, contributor, etc.)
                // label, value are strings
                function generateItem(label, value) {
                    var item = $(document.createElement("div")).addClass("item" + " _" + label.toLowerCase());
                    var label = $(document.createElement("div")).addClass("label").text(label);
                    var values = $(document.createElement("div")).addClass("values");
                    values.html('<div class="value">' + value + '</div>');
                    item.append(label, values);
                    return item;
                }// generateItem()


            }// generateMetadata



        });
    }


</script>