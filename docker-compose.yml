version: '2.1'

volumes:
  fcrepo:
  solr:
  db:
  redis:
  zk1:
  zkconf:
  app:
  assets:
  cache:

networks:
  internal:

services:
  zoo1:
    image: zookeeper:3.4
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zoo1:2888:3888
    expose:
      - 2181
      - 2888
      - 3888
    volumes:
      - zk1:/data
      - zkconf:/conf
    networks:
      internal:
        aliases:
          - zookeeper_cluster
    healthcheck:
      test: ["CMD-SHELL", "echo 'ruok' | nc -w 2 -q 2 localhost 2181 | grep imok || exit 1"]
      interval: "5s"
      timeout: "8s"
  solr:
    image: solr:9.4.1
    command: solr -c -f -z zoo1:2181
    environment:
      - OOM=script
      - VIRTUAL_PORT=8983
      - VIRTUAL_HOST=localhost
    depends_on:
      zoo1:
        condition: service_healthy
    expose:
      - 8983
    volumes:
      - .:/app
      - solr:/opt/solr/server/solr
    networks:
      internal:
    ports:
      - "8983:8983"

  fcrepo:
    image: ghcr.io/samvera/fcrepo4:4.7.5
    volumes:
      - fcrepo:/data:cached
    env_file:
      - .env
    environment:
      - JAVA_OPTS=${JAVA_OPTS} -Dfcrepo.modeshape.configuration="classpath:/config/file-simple/repository.json" -Dfcrepo.object.directory="/data/objects" -Dfcrepo.binary.directory="/data/binaries"
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=localhost
    expose:
      - 8080
    ports:
      - "8080:8080"
    networks:
      internal:

  db:
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      internal:

  app:
    build: .
    image: hyku/main:latest
    env_file:
      - .env
      # Commands to run on first install:
      # bundle exec rails zookeeper:upload
      # rails db:migrate
    environment:
      - IN_DOCKER=true
      - LD_LIBRARY_PATH=/opt/fits/tools/mediainfo/linux
      - RAILS_LOG_TO_STDOUT=true
      - REDIS_HOST=redis
      - SECRET_KEY_BASE=asdf
      - SETTINGS__ACTIVE_JOB__QUEUE_ADAPTER=sidekiq
      - SETTINGS__FITS_PATH=/opt/fits/fits.sh
      # Comment out these 5 for single tenancy / Uncomment for multi
      - SETTINGS__MULTITENANCY__ADMIN_HOST=localhost
      - SETTINGS__MULTITENANCY__ADMIN_ONLY_TENANT_CREATION=false
      - SETTINGS__MULTITENANCY__DEFAULT_HOST=%{tenant}.localhost
      - SETTINGS__MULTITENANCY__ROOT_HOST=localhost
      - SETTINGS__MULTITENANCY__ENABLED=true
      # Comment out these 2 for multi tenancy / Uncomment for single
      # You may also need to change the SOLR_URL in your .env file and/or
      # create a new Solr collection
      # - SETTINGS__MULTITENANCY__ROOT_HOST=localhost
      # - SETTINGS__MULTITENANCY__ENABLED=false
      - SETTINGS__ZOOKEEPER__CONNECTION_STR=zookeeper_cluster:2181/configs
      - PASSENGER_APP_ENV=development
    volumes:
      - app:/home/app/webapp/tmp/uploads
      - assets:/home/app/webapp/public/assets
      - cache:/home/app/webapp/tmp/cache
      - .:/home/app/webapp
    #      - ~/Vault:/home/app/webapp
    networks:
      internal:

  web:
    extends:
      service: app
    depends_on:
      - db
      - solr
      - fcrepo
      - redis
      - zoo1
      - workers
    expose:
      - 80
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    volumes:
      - .:/home/app/webapp:consistent
  #      - ~/Vault:/home/app/webapp:consistent

  workers:
    extends:
      service: app
    command: bundle exec sidekiq
    depends_on:
      - db
      - solr
      - fcrepo
      - redis
      - zoo1

  redis:
    image: redis:7.0.4
    command: redis-server
    volumes:
      - redis:/data
    networks:
      internal:

#  chrome:
#    image: selenium/standalone-chrome:3.141
#    networks:
#      internal: